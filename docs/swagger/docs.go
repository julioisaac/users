// Package swagger Code generated by swaggo/swag. DO NOT EDIT
package swagger

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/health": {
            "get": {
                "description": "Health check",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Get users in cache or db",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "users_id",
                        "name": "users_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "first_name",
                        "name": "first_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "last_name",
                        "name": "last_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "email_address",
                        "name": "email_address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "parent_user_id",
                        "name": "parent_user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "description": "holds the recovered users",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/usersAPI.userResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "when some value of the request is invalid",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    },
                    "404": {
                        "description": "when the request was not found",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    },
                    "500": {
                        "description": "when something was wrong when processing request",
                        "schema": {
                            "$ref": "#/definitions/common.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "common.ApiError": {
            "description": "default error API format",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code of the error",
                    "type": "string"
                },
                "detail": {
                    "description": "Detail of the error",
                    "type": "object",
                    "additionalProperties": {}
                },
                "message": {
                    "description": "Message of the error",
                    "type": "string"
                }
            }
        },
        "usersAPI.userResponse": {
            "description": "holds the recovered user",
            "type": "object",
            "properties": {
                "email_address": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "parent_user_id": {
                    "type": "integer"
                },
                "users_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
